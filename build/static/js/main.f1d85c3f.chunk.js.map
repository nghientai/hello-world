{"version":3,"sources":["components/Footer.js","components/TaskSearchControl.js","components/TaskControl.js","components/TaskItem.js","components/TaskList.js","components/TaskForm.js","App.js","index.js"],"names":["Footer","className","Component","TaskSearchControl","props","onChange","event","target","name","value","setState","onSearch","state","keyword","this","placeholder","onClick","type","TaskItem","onUpdateStatus","task","id","onDeleteItem","onEditItem","index","scope","status","TaskList","onFilter","filterName","filterStatus","taskItems","tasks","colSpan","map","key","TaskForm","resetState","onSubmit","preventDefault","onSave","onChaneHandle","onCancel","onClear","taskEditing","App","toggleForm","isShowingForm","data","console","log","guid","push","findIndex","localStorage","setItem","JSON","stringify","splice","resutl","forEach","showForm","parseInt","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","taskForm","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1d85c3f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div>\n        <footer className=\"my-5 pt-5 text-muted text-center text-small\">\n          <p className=\"mb-1\">&copy; Bootstrap</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nclass TaskSearchControl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\"\n    };\n  }\n\n  onChange = event => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSearch = () => {\n    this.props.onSearch(this.state.keyword);\n  };\n\n  render() {\n    var { keyword } = this.state;\n    return (\n      <div className=\"row mt-3\">\n        <div className=\"col-6\">\n          <div className=\"input-group\">\n            <input\n              className=\"form-control\"\n              name=\"keyword\"\n              placeholder=\"Type something...\"\n              value={keyword}\n              onChange={this.onChange}\n            />\n            <span className=\"input-group-btn\">\n              <button\n                onClick={this.onSearch}\n                className=\"btn btn-primary\"\n                type=\"button\"\n              >\n                Search\n              </button>\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskSearchControl;\n","import React, { Component } from \"react\";\nimport TaskSearchControl from \"./TaskSearchControl\";\n\nclass TaskControl extends Component {\n  render() {\n    return <TaskSearchControl onSearch={this.onSearch} />;\n  }\n}\n\nexport default TaskSearchControl;\n","import React, { Component } from \"react\";\n\nclass TaskItem extends Component {\n  onUpdateStatus = () => {\n    this.props.onUpdateStatus(this.props.task.id);\n  };\n\n  onDeleteItem = () => {\n    this.props.onDeleteItem(this.props.task.id);\n  };\n  onEditItem = () => {\n    this.props.onEditItem(this.props.task.id);\n  };\n\n  render() {\n    var { task, index } = this.props;\n\n    return (\n      <tr>\n        <th scope=\"row\">{index}</th>\n        <td>{task.name} </td>\n        <td>\n          <span\n            className={\n              task.status === true\n                ? \"badge badge-success\"\n                : \"badge badge-danger\"\n            }\n            onClick={this.onUpdateStatus}\n          >\n            {task.status === true ? \"Active\" : \"Hide\"}\n          </span>\n        </td>\n        <td className=\"text-center\">\n          <button\n            onClick={this.onEditItem}\n            type=\"button\"\n            className=\"btn btn-warning\"\n          >\n            Edit\n          </button>\n          <button\n            onClick={this.onDeleteItem}\n            type=\"button\"\n            className=\"btn btn-danger ml-2\"\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default TaskItem;\n","import React, { Component } from \"react\";\nimport TaskItem from \"./TaskItem\";\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterName: \"\",\n      filterStatus: -1\n    };\n  }\n\n  onChange = event => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.props.onFilter(\n      name == \"filterName\" ? value : this.state.filterName,\n      name == \"filterStatus\" ? value : this.state.filterStatus\n    );\n    this.setState({\n      [name]: value\n    });\n\n    //console.log(this.state);\n  };\n\n  render() {\n    var taskItems;\n    var { filterName, filterStatus } = this.state;\n    if (this.props.tasks == null) {\n      //console.log(this.props.tasks.length);\n      taskItems = (\n        <tr>\n          <td colSpan=\"4\">No items</td>\n        </tr>\n      );\n    } else {\n      var { tasks } = this.props;\n      taskItems = tasks.map((task, index) => {\n        return (\n          <TaskItem\n            key={task.id}\n            task={task}\n            index={index + 1}\n            onUpdateStatus={this.props.onUpdateStatus}\n            onDeleteItem={this.props.onDeleteItem}\n            onEditItem={this.props.onEditItem}\n          />\n        );\n      });\n    }\n\n    return (\n      <table className=\"table mt-3\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Status</th>\n            <th scope=\"col\" className=\"text-center\">\n              Action\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"filterName\"\n                value={filterName}\n                onChange={this.onChange}\n              />\n            </td>\n            <td>\n              <select\n                className=\"form-control\"\n                name=\"filterStatus\"\n                value={filterStatus}\n                onChange={this.onChange}\n              >\n                <option value=\"-1\">All</option>\n                <option value=\"0\">Hide</option>\n                <option value=\"1\">Active</option>\n              </select>\n            </td>\n            <td></td>\n          </tr>\n          {taskItems}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default TaskList;\n","import React, { Component } from \"react\";\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      status: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.taskEditing) {\n      //console.log(task);\n      this.setState({\n        id: this.props.taskEditing.id,\n        name: this.props.taskEditing.name,\n        status: this.props.taskEditing.status\n      });\n    }\n  }\n\n  //Use getDerivedStateFromProps instead of componentWillReceiveProps\n  componentWillReceiveProps(props) {\n    if (props && props.taskEditing) {\n      this.setState({\n        id: props.taskEditing.id,\n        name: props.taskEditing.name,\n        status: props.taskEditing.status\n      });\n    }\n  }\n\n  resetState = () => {\n    this.setState({\n      id: \"\",\n      name: \"\",\n      status: false\n    });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.setState(this.state);\n\n    this.props.onSave(this.state);\n    if (this.state.id === \"\") {\n      //console.log(this.state);\n      this.resetState();\n    }\n  };\n\n  onChaneHandle = event => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n\n    //console.log(target.name + \" - \" + target.value);\n    this.setState({\n      [name]: value\n    });\n    //console.log(this.state);\n  };\n\n  onCancel = () => {\n    this.resetState();\n    //this.props.onCancel();\n  };\n  onClear = () => {\n    this.resetState();\n  };\n\n  render() {\n    //console.log(this.state.status);\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <label>Task name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                className=\"form-control\"\n                placeholder=\"Task name\"\n                value={this.state.name}\n                onChange={this.onChaneHandle}\n              />\n              <input type=\"hidden\" name=\"id\" value={this.state.id} />\n            </div>\n            <div className=\"form-group\">\n              <label>Status</label>\n              <select\n                className=\"form-control\"\n                name=\"status\"\n                onChange={this.onChaneHandle}\n                value={this.state.status}\n              >\n                <option value={false}>Hide</option>\n                <option value={true}>Active</option>\n              </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.onCancel}\n              className=\"btn btn-danger ml-2\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.onClear}\n              className=\"btn btn-danger ml-2\"\n            >\n              Clear\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskForm;\n","import React, { Component } from \"react\";\nimport Footer from \"./components/Footer\";\nimport TaskControl from \"./components/TaskControl\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\n//import { findIndex, filter } from \"lodash\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [], // id: , name: \"\", status: true/false\n      isShowingForm: false,\n      taskEditing: null,\n      filter: {\n        name: \"\",\n        status: -1\n      },\n      keyword: \"\"\n    };\n  }\n\n  // The component will call after DOM is updated\n  componentDidMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  toggleForm = () => {\n    this.setState({\n      isShowingForm: !this.state.isShowingForm,\n      taskEditing: null\n    });\n  };\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  guid() {\n    return (\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      this.s4() +\n      this.s4()\n    );\n  }\n\n  onSave = data => {\n    var { tasks } = this.state;\n\n    data.status = data.status === \"true\" || data.status ? true : false;\n    console.log(data.status);\n\n    if (data.id === \"\") {\n      data.id = this.guid();\n      tasks.push(data);\n    } else {\n      let index = this.findIndex(data.id);\n      tasks[index] = data;\n      this.setState({\n        taskEditing: data\n      });\n    }\n\n    this.setState({\n      tasks: tasks\n    });\n\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    //console.log(tasks);\n  };\n\n  onUpdateStatus = id => {\n    var { tasks } = this.state;\n    let index = this.findIndex(id);\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n    //console.log(index);\n  };\n\n  onDeleteItem = id => {\n    var { tasks } = this.state;\n    let index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  };\n\n  findIndex = id => {\n    var { tasks } = this.state;\n    let resutl = -1;\n    tasks.forEach((task, index) => {\n      if (task.id == id) {\n        resutl = index;\n      }\n    });\n    return resutl;\n  };\n\n  showForm = () => {\n    this.setState({\n      isShowingForm: true\n    });\n  };\n\n  onEditItem = id => {\n    // Open Form\n    this.showForm();\n\n    var { tasks } = this.state;\n    let index = this.findIndex(id);\n\n    if (index !== -1) {\n      let taskEditing = tasks[index];\n      //console.log(taskEditing);\n      this.setState({\n        taskEditing: taskEditing\n      });\n    }\n  };\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    });\n  };\n\n  onSearch = keyword => {\n    this.setState({\n      keyword: keyword.toLowerCase()\n    });\n  };\n\n  render() {\n    //console.log(this.state.tasks);\n    var { tasks, isShowingForm, taskEditing, filter, keyword } = this.state;\n    //console.log(filter);\n\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter(task => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n\n      tasks = tasks.filter(task => {\n        if (filter.status === -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    var taskForm = this.state.isShowingForm ? (\n      <TaskForm\n        taskEditing={taskEditing}\n        onSave={this.onSave}\n        onCancel={this.onCancel}\n      />\n    ) : (\n      \"\"\n    );\n\n    return (\n      <div className=\"container\">\n        {/* Logo */}\n        <div className=\"py-5 text-center\">\n          <h2>Todo List App</h2>\n        </div>\n\n        <div className=\"row\">\n          {/* Task Form */}\n          <div\n            className={\n              isShowingForm === true\n                ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\"\n                : \"\"\n            }\n          >\n            {taskForm}\n          </div>\n          <div\n            className={\n              isShowingForm === true\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            {/* Buttons */}\n            <button\n              type=\"buton\"\n              className=\"btn btn-primary\"\n              onClick={this.toggleForm}\n            >\n              {isShowingForm ? \"Close Todo Form\" : \"Add Todo\"}\n            </button>\n\n            {/* Search Form */}\n            <TaskControl onSearch={this.onSearch} />\n            {/* List */}\n            <TaskList\n              tasks={tasks}\n              onUpdateStatus={this.onUpdateStatus}\n              onDeleteItem={this.onDeleteItem}\n              onEditItem={this.onEditItem}\n              onFilter={this.onFilter}\n            />\n          </div>\n        </div>\n\n        {/* Footer */}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}